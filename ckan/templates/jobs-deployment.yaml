{{ if not .Values.centralizedInfraOnly }}
{{ if not .Values.disableJobs }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jobs
  finalizers: []
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: Recreate
  selector:
    matchLabels: {app: jobs}
  template:
    metadata:
      labels: {app: jobs}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/ckan-configmap.yaml") . | sha256sum }}
    spec:
      serviceAccountName: ckan-{{ .Release.Namespace }}-operator
      {{ if .Values.ckanJobsTerminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.ckanJobsTerminationGracePeriodSeconds }}
      {{ end }}
      initContainers:
      - name: secrets
        image: {{ .Values.ckanOperatorImage | quote }}
        args:
        - get-ckan-secrets
        - {{ .Values.ckanSecretName | quote }}
        - /etc/ckan-conf/secrets/secrets.sh
        volumeMounts:
        - name: ckan-conf-secrets-jobs
          mountPath: /etc/ckan-conf/secrets
      - name: permissions
        image: alpine
        command:
        - sh
        - "-c"
        {{ if .Values.enableLocalData }}
        - |
          chown -R 900:900 /var/lib/ckan && chmod -R ug+w /var/lib/ckan && chown -R 900:900 /etc/ckan-conf/secrets &&\
          ls -lah /var/lib/ckan && ls -lah /etc/ckan-conf/secrets
        {{ else }}
        - |
          chown -R 900:900 /etc/ckan-conf/secrets && ls -lah /etc/ckan-conf/secrets
        {{ end }}
        securityContext:
          runAsUser: 0
        volumeMounts:
        {{ if .Values.enableLocalData }}
        - {mountPath: /var/lib/ckan, name: ckan-data, subPath: {{ .Release.Namespace }}-jobs}
        {{ end }}
        - name: ckan-conf-secrets-jobs
          mountPath: /etc/ckan-conf/secrets
      {{ if .Values.imagePullSecret }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecret }}
      {{ end }}
      containers:
      - name: ckan-jobs
        image: {{ .Values.jobsImage | default .Values.ckanImage | quote }}
        {{ if .Values.disablePaster }}
        command: [/ckan-entrypoint.sh, ckan, jobs, worker]
        {{ else }}
        command: [/ckan-entrypoint.sh, ckan-paster, --plugin=ckan, jobs, -c, /etc/ckan/production.ini, worker]
        {{ end }}
        env:
        {{ if .Values.disablePaster }}
        - name: CKAN_INI
          value: /etc/ckan/production.ini
        {{ end }}
        - name: CKAN_STORAGE_PATH
          value: /var/lib/ckan/data
        - name: CKAN_K8S_SECRETS
          value: /etc/ckan-conf/secrets/secrets.sh
        - name: CKAN_K8S_TEMPLATES
          value: /etc/ckan-conf/templates
        - name: GUNICORN_WORKERS
          value: {{ .Values.ckanGunicornWorkers | default "2" | quote }}
{{ if .Values.extraJobsContainerEnvs }}
{{ .Values.extraJobsContainerEnvs | indent 8 }}
{{ end }}
        resources: {{ .Values.ckanJobsResources }}
        volumeMounts:
        {{ if .Values.enableLocalData }}
        - {mountPath: /var/lib/ckan, name: ckan-data, subPath: {{ .Release.Namespace }}-jobs}
        {{ end }}
        - name: ckan-conf-secrets-jobs
          mountPath: /etc/ckan-conf/secrets
          readOnly: true
        - name: ckan-conf-templates-jobs
          mountPath: /etc/ckan-conf/templates
          readOnly: true
        {{ if not .Values.noProbes }}
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - if ! ps -x | grep "bin/ckan jobs worker" | grep -v grep > /dev/null; then echo "Jobs worker are not running."; fi;
          initialDelaySeconds: {{ .Values.ckanReadinessInitialDelaySeconds | default "30" }}
          periodSeconds: {{ .Values.ckanReadinessPeriodSeconds | default "5" }}
          timeoutSeconds: {{ .Values.ckanReadinessTimeoutSeconds | default "10" }}
          failureThreshold: {{ .Values.ckanReadinessFailureThreshold | default "15" }}
        {{ end }}
      volumes:
      - name: ckan-conf-secrets-jobs
        emptyDir: {}
      - name: ckan-conf-templates-jobs
        configMap:
          name: ckan
      {{ if .Values.enableLocalData }}
      - name: ckan-data
      {{ if .Values.usePersistentVolumes }}
        persistentVolumeClaim:
          claimName: {{ .Release.Namespace }}-jobs
      {{ else }}
        hostPath:
          path: /var/ckan-cloud-{{ .Release.Namespace }}
          type: DirectoryOrCreate
      {{ end }}
      {{ end }}
{{ end }}
{{ end }}
